# # -*- coding: utf-8 -*-

# # Form implementation generated from reading ui file 'mainWindow.ui'
# #
# # Created by: PyQt5 UI code generator 5.15.11
# #
# # WARNING: Any manual changes made to this file will be lost when pyuic5 is
# # run again.  Do not edit this file unless you know what you are doing.

# # TO RUN THE PROGRAM: 
#  from --> /d/whisper project $ 
# --> run this command in bash
#  python -m gui.StartWindow.mainWindow  

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QPushButton, QGraphicsDropShadowEffect
from PyQt5.QtGui import QColor, QPainter, QLinearGradient, QFont, QBrush, QPen
from PyQt5.QtCore import QPropertyAnimation, QEasingCurve, QAbstractAnimation, Qt 
import sys
import os

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../../')))

from gui.HideMessage.hideMessage import Ui_MainWindow as HideMessageUI
from gui.RevealContent.revealContent import Ui_MainWindow as RevealContentUI



class GradientLabel(QtWidgets.QLabel):
    def paintEvent(self, event):
        painter = QPainter(self)
        
        # Set the font (important to do before calculating metrics)
        font = QFont("Leckerli One", 24, QFont.Bold)
        painter.setFont(font)
        
        # Create gradient
        gradient = QLinearGradient(0, 0, self.width(), 0)
        gradient.setColorAt(0, QColor("#3A8DDE"))
        gradient.setColorAt(1, QColor("#00D4FF"))
        
        # Set the pen with gradient (not brush)
        pen = QPen()
        pen.setBrush(QBrush(gradient))
        painter.setPen(pen)
        
        # Draw the text
        painter.drawText(self.rect(), Qt.AlignCenter, self.text())
        



class GradientIcon:
    def __init__(self, icon_path, size=32):
        self.original_icon = QtGui.QIcon(icon_path)
        self.size = QtCore.QSize(size, size)
        
    def with_gradient(self, gradient_colors):
        # Create gradient
        gradient = QLinearGradient(0, 0, self.size.width(), 0)
        for pos, color in gradient_colors:
            gradient.setColorAt(pos, QColor(color))
        
        # Create pixmap to paint on
        pixmap = QtGui.QPixmap(self.size)
        pixmap.fill(Qt.transparent)
        
        # Paint with gradient
        painter = QtGui.QPainter(pixmap)
        painter.setRenderHint(QtGui.QPainter.Antialiasing)
        
        # Draw original icon as mask
        original_pix = self.original_icon.pixmap(self.size)
        painter.setCompositionMode(QtGui.QPainter.CompositionMode_SourceOver)
        painter.setBrush(QtGui.QBrush(gradient))
        painter.setPen(Qt.NoPen)
        painter.drawRect(pixmap.rect())
        
        # Apply icon shape as mask
        painter.setCompositionMode(QtGui.QPainter.CompositionMode_DestinationIn)
        painter.drawPixmap(0, 0, original_pix)
        
        painter.end()
        return QtGui.QIcon(pixmap)



class GlowButton(QPushButton):
    def __init__(self, text, icon_path=None):
        super().__init__()

        
        # Initialize animation properties first
        self.effect = QGraphicsDropShadowEffect(self)
        self.effect.setBlurRadius(0)
        self.effect.setColor(QColor("#3a8dde"))
        self.effect.setOffset(0, 0)
        self.setGraphicsEffect(self.effect)
        
        self.animation = QPropertyAnimation(self.effect, b"blurRadius")
        self.animation.setDuration(200)
        self.animation.setEasingCurve(QEasingCurve.OutQuad)

        
        
        # Button styling
        self.setStyleSheet("""
            QPushButton {
                background-color: #2a2a2a;
                color: white;
                font-size: 22px;
                font-weight: bold;
                border: 1px solid #3a3a3a;
                border-radius: 30px;
            }
            QPushButton::icon {
                width: 50px;
                height: 50px;
            }
        """)
        
        # Add gradient icon if provided
        if icon_path:
            gradient_colors = [(0, "#3A8DDE"), (1, "#00D4FF")]
            gradient_icon = GradientIcon(icon_path).with_gradient(gradient_colors)
            self.setIcon(gradient_icon)
            self.setIconSize(QtCore.QSize(50, 50))

    def enterEvent(self, event):
        if self.animation.state() == QAbstractAnimation.Running:
            self.animation.stop()
        self.animation.setStartValue(self.effect.blurRadius())
        self.animation.setEndValue(20)
        self.animation.start()
        super().enterEvent(event)

    def leaveEvent(self, event):
        if self.animation.state() == QAbstractAnimation.Running:
            self.animation.stop()
        self.animation.setStartValue(self.effect.blurRadius())
        self.animation.setEndValue(0)
        self.animation.start()
        super().leaveEvent(event)



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(780, 800)

        self.MainWindow = MainWindow

        
        MainWindow.setWindowIcon(QtGui.QIcon("gui/StartWindow/imgs/smallW (2).png"))
        MainWindow.setStyleSheet("""
        QMainWindow, QWidget {
            background: transparent;
        }
        QMainWindow {
            background-image: url(gui/StartWindow/imgs/DarkBackground.png);
            background-repeat: no-repeat;
            background-position: center;
            background-attachment: fixed;
        }
        QMainWindow::title {
            background-color: #2a2a2a;
            color: white;
        }
        """)

        
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.buttons = QtWidgets.QWidget(self.centralwidget)
        self.buttons.setMinimumSize(QtCore.QSize(570, 491))
        palette = QtGui.QPalette()
        self.buttons.setPalette(palette)
        self.buttons.setObjectName("buttons")
        self.frame = QtWidgets.QFrame(self.buttons)
        # self.gridLayout.addWidget(self.buttons, 0, 0)
        self.buttons.setStyleSheet("background: transparent;")

        self.frame.setGeometry(QtCore.QRect(75, 22, 411, 81))
        palette = QtGui.QPalette()
        self.frame.setPalette(palette)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.widget = QtWidgets.QWidget(self.frame)
        self.widget.setGeometry(QtCore.QRect(0, 0, 411, 81))
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.welcomeLabel = QtWidgets.QLabel(self.widget)
        self.welcomeLabel.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(22)
        font.setBold(True)
        font.setWeight(75)
        self.welcomeLabel.setFont(font)
        self.welcomeLabel.setStyleSheet("QLabel{\n"
"    color: #fff;\n"
"}")
        self.welcomeLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.welcomeLabel.setObjectName("welcomeLabel")
        self.horizontalLayout.addWidget(self.welcomeLabel)
        self.whisperLabel = GradientLabel(self.widget)
        self.whisperLabel.setText("Whisper")
        self.whisperLabel.setMinimumSize(QtCore.QSize(0, 0))
       
        self.whisperLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.whisperLabel.setObjectName("whisperLabel")

        # Load and apply custom font only to whisperLabel
        font_id = QtGui.QFontDatabase.addApplicationFont("gui/StartWindow/fonts/LeckerliOne-Regular.ttf")
        if font_id != -1:
                font_family = QtGui.QFontDatabase.applicationFontFamilies(font_id)[0]
                custom_font = QtGui.QFont(font_family, 24, QtGui.QFont.Bold)
                self.whisperLabel.setFont(custom_font)
        else:
                print("Failed to load font")

        self.horizontalLayout.addWidget(self.whisperLabel)
        self.widget1 = QtWidgets.QWidget(self.buttons)
        self.widget1.setGeometry(QtCore.QRect(0, 120, 561, 371))
        self.widget1.setObjectName("widget1")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget1)
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")


        # self.convertButton = GlowButton("Convert")
        self.convertButton = GlowButton("Convert", "gui/StartWindow/icons/recovery-convert-svgrepo-com.svg")
        self.convertButton.setEnabled(True)
        self.convertButton.setMinimumSize(QtCore.QSize(0, 120))

        self.convertButton.clicked.connect(self.openHideMessageWindow)


        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.convertButton.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(22)
        font.setBold(True)
        font.setWeight(75)
        self.convertButton.setFont(font)
        self.convertButton.setObjectName("convertButton")
        self.verticalLayout.addWidget(self.convertButton)
        
        # self.checkButton = GlowButton("Check Content")
        self.checkButton = QtWidgets.QPushButton(self.centralwidget)
        self.checkButton = GlowButton("Check Content", "gui/StartWindow/icons/check-all-svgrepo-com.svg")
        self.checkButton.setMinimumSize(QtCore.QSize(0, 120))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 42, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.checkButton.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(22)
        font.setBold(True)
        font.setWeight(75)
        self.checkButton.setFont(font)
        self.checkButton.setObjectName("checkButton")
        self.verticalLayout.addWidget(self.checkButton)
        self.checkButton.clicked.connect(self.openRevealContentWindow)
        self.gridLayout.addWidget(self.buttons, 1, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(88, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 1, 2, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(89, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 1, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 121, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem2, 0, 1, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(20, 121, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem3, 2, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)



    def openHideMessageWindow(self):
        self.hide_message_window = QtWidgets.QMainWindow()
        self.ui_hide_message = HideMessageUI()
        self.ui_hide_message.setupUi(self.hide_message_window)
        self.hide_message_window.show()
        MainWindow.close()

    def openRevealContentWindow(self):
        self.reveal_window = QtWidgets.QMainWindow()
        self.ui_reveal = RevealContentUI()  
        self.ui_reveal.setupUi(self.reveal_window)
        self.reveal_window.show()
        self.MainWindow.close()  # closes the start page



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Whisper"))
        self.welcomeLabel.setText(_translate("MainWindow", "Welcome to "))
        self.whisperLabel.setText(_translate("MainWindow", "Whisper"))
        self.convertButton.setText(_translate("MainWindow", "   Hide Content"))
        self.checkButton.setText(_translate("MainWindow", "   Reveal Content"))




if __name__ == "__main__":
    import sys
    from PyQt5.QtGui import QFontDatabase, QFont
    app = QtWidgets.QApplication(sys.argv)

    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)


    MainWindow.show()
    sys.exit(app.exec_())




