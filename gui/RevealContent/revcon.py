# # -*- coding: utf-8 -*-

# # Form implementation generated from reading ui file 'hide.ui'
# #
# # Created by: PyQt5 UI code generator 5.15.11
# #
# # WARNING: Any manual changes made to this file will be lost when pyuic5 is
# # run again.  Do not edit this file unless you know what you are doing.


# from PyQt5 import QtCore, QtGui, QtWidgets
# from PyQt5.QtGui import QPixmap, QPainter, QColor
# from PyQt5 import QtCore
# import os
# import sys

# # Add the parent directory to the system path
# sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', 'Whisper')))
# from Whisper.ImageSteganography import ImageSteganography
# from Whisper.steganography import TextSteganography
# from Whisper.AudioTextSteganography import AudioTextSteganography
# from Whisper.steganography import TextSteganography




# def colorize_pixmap(pixmap, color_str):
#     tinted = QPixmap(pixmap.size())
#     tinted.fill(QtCore.Qt.transparent)

#     painter = QPainter(tinted)
#     painter.setCompositionMode(QPainter.CompositionMode_Source)
#     painter.drawPixmap(0, 0, pixmap)
#     painter.setCompositionMode(QPainter.CompositionMode_SourceIn)
#     painter.fillRect(tinted.rect(), QColor(color_str))
#     painter.end()

#     return tinted



# class Ui_MainWindow(object):
#     def setupUi(self, MainWindow):
#         MainWindow.setObjectName("MainWindow")
#         MainWindow.resize(900, 700)
#         script_dir = os.path.dirname(os.path.abspath(__file__))
#         logo_path = os.path.join(script_dir, "imgs", "smallW (2).png")




#         icon = QtGui.QIcon()
#         icon.addPixmap(QtGui.QPixmap(logo_path), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         # icon.addPixmap(QtGui.QPixmap("../StartWindow/imgs/smallW (2).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)ls
#         MainWindow.setWindowIcon(icon)
#         self.MainWindow = MainWindow

#         # self.ui = Ui_MainWindow()
#         # self.ui.setupUi(self)

#         MainWindow.setStyleSheet("QMainWindow {\n"
#         "    background-color: #2c2c2c; \n"
#         "}\n"
#         "\n"
#         "QComboBox {\n"
#         "    background-color: #3a3a3a;\n"
#         "    color: #f0f0f0;\n"
#         "    border: 1px solid #444444;\n"
#         "    border-radius: 4px;\n"
#         "    min-height: 40px; \n"
#         "    padding-left: 10px;\n"
#         "}\n"
#         "\n"
#         "QComboBox:hover {\n"
#         "    background-color: #444444;\n"
#         "}\n"
#         "\n"
#         "QComboBox::drop-down {\n"
#         "    background-color: #3a3a3a;\n"
#         "    border-left: 1px solid #444444;\n"
#         "    width: 24px;\n"
#         "}\n"
#         "\n"
#         "QComboBox::down-arrow {\n"
#         "    image: url(gui/HideMessage/icons/down-arrow-5-svgrepo-com.svg);  /* make sure the image exists in resources */\n"
#         "    width: 12px;\n"
#         "    height: 12px;\n"
#         "}\n"

#         "QComboBox QAbstractItemView {\n"
#         "    background-color: #3a3a3a;\n"
#         "    color: #f0f0f0;\n"
#         "    selection-background-color: #2c2c2c;\n"
#         "    selection-color: #ffffff;\n"
#         "    border: 1px solid #444444;\n"
#         "    outline: 0;\n"
#         "    min-height: 100px;\n"
#         "}\n"
#         "QComboBox QAbstractItemView::item {\n"
#         # "     min-height: 40px;\n"
#         "     max-height: 60px;\n"
#         "     padding: 10px 10px 10px 10px;\n"
#         "     margin: 5px;\n"
#         "}\n"
#         "QComboBox QAbstractItemView::item:hover {\n"
#         "     background-color: #505050;\n"
#         "     color: white;\n"
#         "}\n"

#         "")

        
#         self.image_steganography = ImageSteganography()
#         self.audio_steganography = AudioTextSteganography()



#         self.centralwidget = QtWidgets.QWidget(MainWindow)
#         self.centralwidget.setObjectName("centralwidget")
#         self.logoBigFrame = QtWidgets.QFrame(self.centralwidget)
#         self.logoBigFrame.setGeometry(QtCore.QRect(0, 10, 900, 71))
#         self.logoBigFrame.setStyleSheet("#logoBigFrame {\n"
#         "    border: none;\n"
#         "    border-bottom: 1px solid #1a1a1a; /* Change color & thickness as needed */\n"
#         "}\n"
#         "")
#         self.logoBigFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
#         self.logoBigFrame.setFrameShadow(QtWidgets.QFrame.Raised)
#         self.logoBigFrame.setObjectName("logoBigFrame")
#         self.horizontalLayout = QtWidgets.QHBoxLayout(self.logoBigFrame)
#         self.horizontalLayout.setObjectName("horizontalLayout")
#         self.logoSmallFrame = QtWidgets.QFrame(self.logoBigFrame)
#         self.logoSmallFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
#         self.logoSmallFrame.setFrameShadow(QtWidgets.QFrame.Raised)
#         self.logoSmallFrame.setObjectName("logoSmallFrame")
#         self.whisperLogo = QtWidgets.QLabel(self.logoSmallFrame)
#         self.whisperLogo.setGeometry(QtCore.QRect(30, 10, 130, 41))
#         self.whisperLogo.setText("")
#         self.whisperLogo.setPixmap(QtGui.QPixmap("gui/HideMessage/imgs/WhisperLogo.png"))
#         self.whisperLogo.setScaledContents(True)
#         self.whisperLogo.setAlignment(QtCore.Qt.AlignCenter)
#         self.whisperLogo.setWordWrap(False)
#         self.whisperLogo.setObjectName("whisperLogo")
#         self.horizontalLayout.addWidget(self.logoSmallFrame)
#         self.passwordWidget = QtWidgets.QWidget(self.centralwidget)
#         self.passwordWidget.setGeometry(QtCore.QRect(40, 515, 500, 153))
#         self.passwordWidget.setMinimumSize(QtCore.QSize(500, 0))
#         self.passwordWidget.setMaximumSize(QtCore.QSize(500, 16777215))
#         self.passwordWidget.setObjectName("passwordWidget")
#         self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.passwordWidget)
#         self.verticalLayout_3.setContentsMargins(11, 0, 0, 0)
#         self.verticalLayout_3.setSpacing(0)
#         self.verticalLayout_3.setObjectName("verticalLayout_3")
#         self.passwordLabel = QtWidgets.QLabel(self.passwordWidget)
#         self.passwordLabel.setMinimumSize(QtCore.QSize(59, 30))
#         self.passwordLabel.setMaximumSize(QtCore.QSize(16777215, 30))
#         font = QtGui.QFont()
#         font.setFamily("Segoe UI")
#         font.setPointSize(9)
#         self.passwordLabel.setFont(font)
#         self.passwordLabel.setStyleSheet("#passwordLabel {\n"
#         "    color: #f0f0f0;  \n"
#         "}")
#         self.passwordLabel.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
#         self.passwordLabel.setObjectName("passwordLabel")
#         self.verticalLayout_3.addWidget(self.passwordLabel)
#         self.passwordAndButtonsWidget = QtWidgets.QWidget(self.passwordWidget)
#         self.passwordAndButtonsWidget.setMaximumSize(QtCore.QSize(805, 16777215))

#         self.passwordAndButtonsWidget.setObjectName("passwordAndButtonsWidget")
#         self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.passwordAndButtonsWidget)
#         self.horizontalLayout_3.setContentsMargins(0, -1, 0, -1)
#         self.horizontalLayout_3.setSpacing(128)
#         self.horizontalLayout_3.setObjectName("horizontalLayout_3")
#         self.suggestedWidget = QtWidgets.QWidget(self.passwordAndButtonsWidget)
#         self.suggestedWidget.setMaximumSize(QtCore.QSize(512, 16777215))
#         self.suggestedWidget.setObjectName("suggestedWidget")
#         self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.suggestedWidget)
#         self.horizontalLayout_7.setContentsMargins(0, 0, -1, -1)
#         self.horizontalLayout_7.setSpacing(45)
#         self.horizontalLayout_7.setObjectName("horizontalLayout_7")
#         self.passwordInputWidget = QtWidgets.QWidget(self.suggestedWidget)
#         self.passwordInputWidget.setMinimumSize(QtCore.QSize(300, 50))
#         self.passwordInputWidget.setMaximumSize(QtCore.QSize(300, 50))
#         self.passwordInputWidget.setStyleSheet("#passwordInputWidget {\n"
#         "    border: 1px solid #cecece;\n"
#         "    border-radius: 10px;\n"
#         "}")
#         self.passwordInputWidget.setObjectName("passwordInputWidget")
#         self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.passwordInputWidget)
#         self.horizontalLayout_5.setObjectName("horizontalLayout_5")
#         self.passwordPlainTextEdit = QtWidgets.QPlainTextEdit(self.passwordInputWidget)
#         self.passwordPlainTextEdit.setMinimumSize(QtCore.QSize(280, 0))
#         self.passwordPlainTextEdit.setMaximumSize(QtCore.QSize(280, 16777215))
#         font = QtGui.QFont()
#         font.setFamily("Segoe UI")
#         font.setPointSize(9)
#         self.passwordPlainTextEdit.setFont(font)
#         self.passwordPlainTextEdit.setStyleSheet("#passwordPlainTextEdit {\n"
#         "    background-color: #2c2c2c;\n"
#         "    color: #f0f0f0;\n"
#         "    border: none;\n"
#         "}")
#         self.passwordPlainTextEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
#         self.passwordPlainTextEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
#         self.passwordPlainTextEdit.setObjectName("passwordPlainTextEdit")
#         self.horizontalLayout_5.addWidget(self.passwordPlainTextEdit)
#         self.horizontalLayout_7.addWidget(self.passwordInputWidget)
#         self.passwordGenerateButton = QtWidgets.QPushButton(self.suggestedWidget)
#         self.passwordGenerateButton.setMinimumSize(QtCore.QSize(130, 0))
#         self.passwordGenerateButton.setMaximumSize(QtCore.QSize(130, 50))
#         font = QtGui.QFont()
#         font.setFamily("Segoe UI")
#         font.setPointSize(9)
#         font.setBold(True)
#         font.setWeight(75)
#         self.passwordGenerateButton.setFont(font)
#         self.passwordGenerateButton.setStyleSheet("""
#         QPushButton {
#                 background-color: #1F5C94;       /* Green background */
#                 color: white;                    /* White text */
#                 border: none;                   /* No border */
#                 border-radius: 8px;             /* Rounded corners */
#                 padding: 10px 20px;             /* Vertical and horizontal padding */
#                 font-size: 16px;                /* Bigger font */
#                 font-weight: bold;              /* Bold text */
#                 margin-top: 4px;
#         }
#         QPushButton:hover {
#                 background-color: #3B84CC;      /* Slightly darker green on hover */
#         }
#         QPushButton:pressed {
#                 background-color: #3A8DDE;      /* Even darker green on press */
#         }
#         """)
#         self.passwordGenerateButton.setObjectName("passwordGenerateButton")
#         self.horizontalLayout_7.addWidget(self.passwordGenerateButton)
#         self.horizontalLayout_3.addWidget(self.suggestedWidget)
#         self.verticalLayout_3.addWidget(self.passwordAndButtonsWidget)
#         self.convertFrame = QtWidgets.QWidget(self.centralwidget)
#         self.convertFrame.setGeometry(QtCore.QRect(40, 120, 831, 291))
#         self.convertFrame.setObjectName("convertFrame")
#         self.comboBoxeswidget = QtWidgets.QWidget(self.convertFrame)
#         self.comboBoxeswidget.setGeometry(QtCore.QRect(0, 0, 671, 61))
#         self.comboBoxeswidget.setMinimumSize(QtCore.QSize(671, 61))
#         self.comboBoxeswidget.setMaximumSize(QtCore.QSize(671, 61))
#         self.comboBoxeswidget.setObjectName("comboBoxeswidget")
#         self.fromComboBox = QtWidgets.QComboBox(self.comboBoxeswidget)
#         self.fromComboBox.setGeometry(QtCore.QRect(11, 5, 200, 40))
#         self.fromComboBox.setMinimumSize(QtCore.QSize(200, 40))
#         self.fromComboBox.setMaximumSize(QtCore.QSize(200, 40))
#         font = QtGui.QFont()
#         font.setFamily("Sans Serif Collection")
#         font.setPointSize(9)
#         font.setBold(True)
#         font.setWeight(75)
#         self.fromComboBox.setFont(font)

       

#         self.fromComboBox.setObjectName("fromComboBox")
       
#         self.toComboBox = QtWidgets.QComboBox(self.comboBoxeswidget)
#         self.toComboBox.setGeometry(QtCore.QRect(449, 5, 200, 40))
#         self.toComboBox.setMinimumSize(QtCore.QSize(200, 40))
#         self.toComboBox.setMaximumSize(QtCore.QSize(200, 40))
#         font = QtGui.QFont()
#         font.setFamily("Sans Serif Collection")
#         font.setPointSize(9)
#         font.setBold(True)
#         font.setWeight(75)

         

#         self.toComboBox.setFont(font)
#         self.toComboBox.setObjectName("toComboBox")

#         self.convertionWidget = QtWidgets.QWidget(self.convertFrame)
#         self.convertionWidget.setGeometry(QtCore.QRect(0, 60, 831, 221))
#         self.convertionWidget.setObjectName("convertionWidget")
#         self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.convertionWidget)
#         self.horizontalLayout_4.setContentsMargins(10, 0, 0, 0)
#         self.horizontalLayout_4.setSpacing(14)
#         self.horizontalLayout_4.setObjectName("horizontalLayout_4")
#         self.fromStackedWidget = QtWidgets.QStackedWidget(self.convertionWidget)
#         self.fromStackedWidget.setObjectName("fromStackedWidget")
#         self.fromTextWidget = QtWidgets.QWidget()
#         self.fromTextWidget.setObjectName("fromTextWidget")
#         self.fromWidget_textTotext = QtWidgets.QWidget(self.fromTextWidget)
#         self.fromWidget_textTotext.setGeometry(QtCore.QRect(0, 20, 372, 170))
#         self.fromWidget_textTotext.setMinimumSize(QtCore.QSize(372, 170))
#         self.fromWidget_textTotext.setMaximumSize(QtCore.QSize(372, 170))
#         self.fromWidget_textTotext.setStyleSheet("QWidget {\n"
#         "    border: 1px solid #3d3d3d;\n"
#         "    border-radius: 10px;\n"
#         "}\n"
#         "QWidget:hover {\n"
#         "       border: 1px solid #5a5a5a;\n"
#         "}\n"
#         "QWidget:focus {\n"
#         "       border: 1px solid #ffffff;\n"
#         "}\n"
#         "")
#         self.fromWidget_textTotext.setObjectName("fromWidget_textTotext")
#         self.fromPlainTextEdit = QtWidgets.QPlainTextEdit(self.fromWidget_textTotext)
#         self.fromPlainTextEdit.setGeometry(QtCore.QRect(10, 10, 353, 151))
#         self.fromPlainTextEdit.setMinimumSize(QtCore.QSize(353, 151))
#         self.fromPlainTextEdit.setMaximumSize(QtCore.QSize(353, 171))
#         font = QtGui.QFont()
#         font.setFamily("Segoe UI")
#         font.setPointSize(9)
#         self.fromPlainTextEdit.setFont(font)
#         self.fromPlainTextEdit.setStyleSheet("QPlainTextEdit {\n"
#         "    border: none;\n"
#         "    background-color: #2c2c2c;\n"
#         "    color: white;\n"
#         "    border-radius: 10px;\n"
#         "}")
#         self.fromPlainTextEdit.setObjectName("fromPlainTextEdit")
#         self.fromStackedWidget.addWidget(self.fromTextWidget)
#         self.fromImgWidget = QtWidgets.QWidget()
#         self.fromImgWidget.setObjectName("fromImgWidget")
#         self.toWidget_textToimg = QtWidgets.QWidget(self.fromImgWidget)
#         self.toWidget_textToimg.setGeometry(QtCore.QRect(0, 20, 372, 170))
#         sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Preferred)
#         sizePolicy.setHorizontalStretch(0)
#         sizePolicy.setVerticalStretch(0)
#         sizePolicy.setHeightForWidth(self.toWidget_textToimg.sizePolicy().hasHeightForWidth())
#         self.toWidget_textToimg.setSizePolicy(sizePolicy)
#         self.toWidget_textToimg.setMinimumSize(QtCore.QSize(372, 170))
#         self.toWidget_textToimg.setMaximumSize(QtCore.QSize(372, 170))
#         self.toWidget_textToimg.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
#         self.toWidget_textToimg.setAutoFillBackground(False)
#         self.toWidget_textToimg.setStyleSheet("QWidget {\n"
#         "    border: 1px solid #3d3d3d;\n"
#         "    border-radius: 10px;\n"
#         "}\n"
#         "QWidget:hover {\n"
#         "       border: 1px solid #5a5a5a;\n"
#         "}\n"
#         "QWidget:focus {\n"
#         "       border: 1px solid #ffffff;\n"
#         "}\n"
#         "")
#         self.toWidget_textToimg.setObjectName("toWidget_textToimg")
#         self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.toWidget_textToimg)
#         self.verticalLayout_5.setContentsMargins(80, 0, 80, 0)
#         self.verticalLayout_5.setSpacing(20)
#         self.verticalLayout_5.setObjectName("verticalLayout_5")
#         self.widget_4 = QtWidgets.QWidget(self.toWidget_textToimg)
#         self.widget_4.setMaximumSize(QtCore.QSize(16777215, 88))
#         self.widget_4.setStyleSheet("QWidget {\n"
#         "    border: none;\n"
#         "}\n"
#         "\n"
#         "QLabel {\n"
#         "    border: none;\n"
#         "}")
#         self.widget_4.setObjectName("widget_4")
#         self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.widget_4)
#         self.verticalLayout_6.setContentsMargins(-1, 0, 47, -1)
#         self.verticalLayout_6.setObjectName("verticalLayout_6")

#         self.label_4 = QtWidgets.QLabel(self.widget_4)
#         self.label_4.setMinimumSize(QtCore.QSize(0, 88))
#         self.label_4.setMaximumSize(QtCore.QSize(120, 90))
#         self.label_4.setLayoutDirection(QtCore.Qt.RightToLeft)
#         self.label_4.setText("")
#         self.label_4.setPixmap(QtGui.QPixmap("gui/HideMessage/icons/cloud-arrow-up-svgrepo-com.svg"))
#         self.label_4.setScaledContents(True)
#         self.label_4.setWordWrap(False)
#         self.label_4.setObjectName("label_4")

#         original_pixmap = QtGui.QPixmap("gui/HideMessage/icons/cloud-arrow-up-svgrepo-com.svg")
#         colored_pixmap = colorize_pixmap(original_pixmap, "#3d3d3d")
#         self.label_4.setPixmap(colored_pixmap)

#         self.verticalLayout_6.addWidget(self.label_4)
#         self.verticalLayout_5.addWidget(self.widget_4)
#         self.widget_5 = QtWidgets.QWidget(self.toWidget_textToimg)
#         self.widget_5.setMaximumSize(QtCore.QSize(16777215, 88))
#         self.widget_5.setStyleSheet("QWidget {\n"
#         "    border: none;\n"
#         "}\n"
#         "\n"
#         "QLabel {\n"
#         "    border: none;\n"
#         "}")
#         self.widget_5.setObjectName("widget_5")
#         self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.widget_5)
#         self.verticalLayout_7.setContentsMargins(55, 0, -1, -1)
#         self.verticalLayout_7.setObjectName("verticalLayout_7")
#         self.fromBrowseButton_img = QtWidgets.QPushButton(self.widget_5)
#         self.fromBrowseButton_img.setMinimumSize(QtCore.QSize(100, 35))
#         self.fromBrowseButton_img.setMaximumSize(QtCore.QSize(100, 35))
#         font = QtGui.QFont()
#         font.setFamily("Segoe UI")
#         self.fromBrowseButton_img.setFont(font)
#         self.fromBrowseButton_img.setStyleSheet("QPushButton {\n"
#         "    background-color: #7c7c7c;\n"
#         "    color: white;\n"
#         "}")
#         self.fromBrowseButton_img.setObjectName("fromBrowseButton_img")
#         self.verticalLayout_7.addWidget(self.fromBrowseButton_img)



#         self.verticalLayout_5.addWidget(self.widget_5)
#         self.fromStackedWidget.addWidget(self.fromImgWidget)

#         self.fromAudioWidget = QtWidgets.QWidget()
#         self.fromAudioWidget.setObjectName("fromAudioWidget")

#         self.fromWidget_textToaudio = QtWidgets.QWidget(self.fromAudioWidget)
#         self.fromWidget_textToaudio.setGeometry(QtCore.QRect(0, 20, 372, 170))

#         sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Preferred)
#         sizePolicy.setHorizontalStretch(0)
#         sizePolicy.setVerticalStretch(0)
#         sizePolicy.setHeightForWidth(self.fromWidget_textToaudio.sizePolicy().hasHeightForWidth())
#         self.fromWidget_textToaudio.setSizePolicy(sizePolicy)
#         self.fromWidget_textToaudio.setMinimumSize(QtCore.QSize(372, 170))
#         self.fromWidget_textToaudio.setMaximumSize(QtCore.QSize(372, 170))
#         self.fromWidget_textToaudio.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
#         self.fromWidget_textToaudio.setAutoFillBackground(False)
#         self.fromWidget_textToaudio.setStyleSheet("""
#         QWidget {
#             border: 1px solid #3d3d3d;
#             border-radius: 10px;
#         }
#         QWidget:hover {
#             border: 1px solid #5a5a5a;
#         }
#         QWidget:focus {
#             border: 1px solid #ffffff;
#         }
#         """)

#         self.fromWidget_textToaudio.setObjectName("fromWidget_textToaudio")

#         self.verticalLayout_from_audio = QtWidgets.QVBoxLayout(self.fromWidget_textToaudio)
#         self.verticalLayout_from_audio.setContentsMargins(80, 0, 80, 0)
#         self.verticalLayout_from_audio.setSpacing(20)
#         self.verticalLayout_from_audio.setObjectName("verticalLayout_from_audio")

#         # Finally, don't forget to add it to the stacked widget!
#         self.fromStackedWidget.addWidget(self.fromAudioWidget)


#         self.horizontalLayout_4.addWidget(self.fromStackedWidget)

#         self.arrowRightLabel = QtWidgets.QLabel(self.convertionWidget)
#         self.arrowRightLabel.setMaximumSize(QtCore.QSize(32, 32))

#         self.fromBrowseButton_img.setStyleSheet("""
#         QPushButton {
#         background-color: #3a3a3a;
#         color: #f0f0f0;
#         border: 1px solid #555555;
#         border-radius: 6px;
#         padding: 8px 16px;
#         font-weight: bold;
#         }

#         QPushButton:hover {
#         background-color: #4a4a4a;
#         border: 1px solid #666666;
#         }

#         QPushButton:pressed {
#         background-color: #2a2a2a;
#         border: 1px solid #888888;
#         }
#         """)
#         self.arrowRightLabel.setText("")
#         self.arrowRightLabel.setPixmap(QtGui.QPixmap("gui/HideMessage/icons/arrow-right-svgrepo-com.svg"))
#         self.arrowRightLabel.setScaledContents(True)
#         original_pixmap = QtGui.QPixmap("gui/HideMessage/icons/arrow-right-svgrepo-com.svg")
#         colored_pixmap = colorize_pixmap(original_pixmap, "#3d3d3d")
#         self.arrowRightLabel.setPixmap(colored_pixmap)
#         self.arrowRightLabel.setObjectName("arrowRightLabel")

#         self.horizontalLayout_4.addWidget(self.arrowRightLabel)
#         self.toStackedWidget = QtWidgets.QStackedWidget(self.convertionWidget)
#         self.toStackedWidget.setObjectName("toStackedWidget")
#         self.toTextWidget = QtWidgets.QWidget()
#         self.toTextWidget.setObjectName("toTextWidget")
#         self.toWidget_textTotext = QtWidgets.QWidget(self.toTextWidget)
#         self.toWidget_textTotext.setGeometry(QtCore.QRect(0, 20, 372, 170))
#         self.toWidget_textTotext.setMinimumSize(QtCore.QSize(372, 170))
#         self.toWidget_textTotext.setMaximumSize(QtCore.QSize(372, 170))
#         self.toWidget_textTotext.setStyleSheet("QWidget {\n"
#         "    border: 1px solid #3d3d3d;\n"
#         "    border-radius: 10px;\n"
#         "}\n"
#         "")
#         self.toWidget_textTotext.setObjectName("toWidget_textTotext")
#         self.toPlainTextEdit = QtWidgets.QPlainTextEdit(self.toWidget_textTotext)
#         self.toPlainTextEdit.setGeometry(QtCore.QRect(10, 10, 353, 151))
#         self.toPlainTextEdit.setMinimumSize(QtCore.QSize(353, 151))
#         self.toPlainTextEdit.setMaximumSize(QtCore.QSize(353, 171))
#         font = QtGui.QFont()
#         font.setFamily("Segoe UI")
#         font.setPointSize(9)
#         self.toPlainTextEdit.setFont(font)
#         self.toPlainTextEdit.setStyleSheet("QPlainTextEdit {\n"
#         "    border: none;\n"
#         "    background-color: #2c2c2c;\n"
#         "    color: white;\n"
#         "    border-radius: 10px;\n"
#         "}")
#         self.toPlainTextEdit.setObjectName("toPlainTextEdit")
#         self.toStackedWidget.addWidget(self.toTextWidget)
#         self.toImgWidget = QtWidgets.QWidget()
#         self.toImgWidget.setObjectName("toImgWidget")
#         self.toWidget_Toimg = QtWidgets.QWidget(self.toImgWidget)
#         self.toWidget_Toimg.setGeometry(QtCore.QRect(0, 20, 372, 170))
#         sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Preferred)
#         sizePolicy.setHorizontalStretch(0)
#         sizePolicy.setVerticalStretch(0)
#         sizePolicy.setHeightForWidth(self.toWidget_Toimg.sizePolicy().hasHeightForWidth())
#         self.toWidget_Toimg.setSizePolicy(sizePolicy)
#         self.toWidget_Toimg.setMinimumSize(QtCore.QSize(372, 170))
#         self.toWidget_Toimg.setMaximumSize(QtCore.QSize(372, 170))
#         self.toWidget_Toimg.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
#         self.toWidget_Toimg.setAutoFillBackground(False)
#         self.toWidget_Toimg.setStyleSheet("QWidget {\n"
#         "    border: 1px solid #3d3d3d;\n"
#         "    border-radius: 10px;\n"
#         "}\n"
#         "QWidget:hover {\n"
#         "       border: 1px solid #5a5a5a;\n"
#         "}\n"
#         "QWidget:focus {\n"
#         "       border: 1px solid #ffffff;\n"
#         "}\n"
#         "")
#         self.toWidget_Toimg.setObjectName("toWidget_Toimg")
#         self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.toWidget_Toimg)
#         self.verticalLayout_8.setContentsMargins(80, 0, 80, 0)
#         self.verticalLayout_8.setSpacing(20)
#         self.verticalLayout_8.setObjectName("verticalLayout_8")
#         self.widget_6 = QtWidgets.QWidget(self.toWidget_Toimg)
#         self.widget_6.setMaximumSize(QtCore.QSize(16777215, 88))
#         self.widget_6.setStyleSheet("QWidget {\n"
#         "    border: none;\n"
#         "}\n"
#         "\n"
#         "QLabel {\n"
#         "    border: none;\n"
#         "}")
#         self.widget_6.setObjectName("widget_6")
#         self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.widget_6)
#         self.verticalLayout_9.setContentsMargins(-1, 0, 47, -1)
#         self.verticalLayout_9.setObjectName("verticalLayout_9")

#         self.label_5 = QtWidgets.QLabel(self.widget_6)
#         self.label_5.setMinimumSize(QtCore.QSize(0, 88))
#         self.label_5.setMaximumSize(QtCore.QSize(120, 90))
#         self.label_5.setLayoutDirection(QtCore.Qt.RightToLeft)
#         self.label_5.setText("")
#         self.label_5.setPixmap(QtGui.QPixmap("gui/HideMessage/icons/cloud-arrow-up-svgrepo-com.svg"))
#         self.label_5.setScaledContents(True)
#         self.label_5.setWordWrap(False)
#         self.label_5.setObjectName("label_5")

#         original_pixmap_5 = QtGui.QPixmap("gui/HideMessage/icons/cloud-arrow-up-svgrepo-com.svg")
#         colored_pixmap_5 = colorize_pixmap(original_pixmap_5, "#3d3d3d")
#         self.label_5.setPixmap(colored_pixmap_5)

#         self.verticalLayout_9.addWidget(self.label_5)
#         self.verticalLayout_8.addWidget(self.widget_6)
#         self.widget_7 = QtWidgets.QWidget(self.toWidget_Toimg)
#         self.widget_7.setMaximumSize(QtCore.QSize(16777215, 88))
#         self.widget_7.setStyleSheet("QWidget {\n"
#         "    border: none;\n"
#         "}\n"
#         "\n"
#         "QLabel {\n"
#         "    border: none;\n"
#         "}")
#         self.widget_7.setObjectName("widget_7")
#         self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.widget_7)
#         self.verticalLayout_10.setContentsMargins(55, 0, -1, -1)
#         self.verticalLayout_10.setObjectName("verticalLayout_10")
#         self.toBrowseButton_img = QtWidgets.QPushButton(self.widget_7)
#         self.toBrowseButton_img.setMinimumSize(QtCore.QSize(100, 35))
#         self.toBrowseButton_img.setMaximumSize(QtCore.QSize(100, 35))
#         font = QtGui.QFont()
#         font.setFamily("Segoe UI")
#         self.toBrowseButton_img.setFont(font)
#         self.toBrowseButton_img.setStyleSheet("""
#         QPushButton {
#         background-color: #3a3a3a;
#         color: #f0f0f0;
#         border: 1px solid #555555;
#         border-radius: 6px;
#         padding: 8px 16px;
#         font-weight: bold;
#         }

#         QPushButton:hover {
#         background-color: #4a4a4a;
#         border: 1px solid #666666;
#         }

#         QPushButton:pressed {
#         background-color: #2a2a2a;
#         border: 1px solid #888888;
#         }
#         """)

#         self.toBrowseButton_img.setObjectName("toBrowseButton_img")



#         self.verticalLayout_10.addWidget(self.toBrowseButton_img)
#         self.verticalLayout_8.addWidget(self.widget_7)
#         self.toStackedWidget.addWidget(self.toImgWidget)
#         self.toAudioWidget = QtWidgets.QWidget()
#         self.toAudioWidget.setObjectName("toAudioWidget")
#         self.toWidget_textToaudio = QtWidgets.QWidget(self.toAudioWidget)
#         self.toWidget_textToaudio.setGeometry(QtCore.QRect(0, 20, 372, 170))
#         sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Preferred)
#         sizePolicy.setHorizontalStretch(0)
#         sizePolicy.setVerticalStretch(0)
#         sizePolicy.setHeightForWidth(self.toWidget_textToaudio.sizePolicy().hasHeightForWidth())
#         self.toWidget_textToaudio.setSizePolicy(sizePolicy)
#         self.toWidget_textToaudio.setMinimumSize(QtCore.QSize(372, 170))
#         self.toWidget_textToaudio.setMaximumSize(QtCore.QSize(372, 170))
#         self.toWidget_textToaudio.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
#         self.toWidget_textToaudio.setAutoFillBackground(False)
#         self.toWidget_textToaudio.setStyleSheet("QWidget {\n"
#         "    border: 1px solid #3d3d3d;\n"
#         "    border-radius: 10px;\n"
#         "}"
#         "QWidget:hover {\n"
#         "       border: 1px solid #5a5a5a;\n"
#         "}\n"
#         "QWidget:focus {\n"
#         "       border: 1px solid #ffffff;\n"
#         "}\n"
#         "")
#         self.toWidget_textToaudio.setObjectName("toWidget_textToaudio")
#         self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.toWidget_textToaudio)
#         self.verticalLayout_11.setContentsMargins(80, 0, 80, 0)
#         self.verticalLayout_11.setSpacing(20)
#         self.verticalLayout_11.setObjectName("verticalLayout_11")
#         self.widget_8 = QtWidgets.QWidget(self.toWidget_textToaudio)
#         self.widget_8.setMaximumSize(QtCore.QSize(16777215, 88))
#         self.widget_8.setStyleSheet("QWidget {\n"
#         "    border: none;\n"
#         "}\n"
#         "\n"
#         "QLabel {\n"
#         "    border: none;\n"
#         "}")
#         self.widget_8.setObjectName("widget_8")
#         self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.widget_8)
#         self.verticalLayout_12.setContentsMargins(-1, 0, 47, -1)
#         self.verticalLayout_12.setObjectName("verticalLayout_12")

#         self.label_6 = QtWidgets.QLabel(self.widget_8)
#         self.label_6.setMinimumSize(QtCore.QSize(0, 88))
#         self.label_6.setMaximumSize(QtCore.QSize(120, 90))
#         self.label_6.setLayoutDirection(QtCore.Qt.RightToLeft)
#         self.label_6.setText("")
#         self.label_6.setPixmap(QtGui.QPixmap("gui/HideMessage/icons/audio-svgrepo-com.svg"))
#         self.label_6.setScaledContents(True)
#         self.label_6.setWordWrap(False)
#         self.label_6.setObjectName("label_6")

#         original_pixmap_6 = QtGui.QPixmap("gui/HideMessage/icons/audio-svgrepo-com.svg")
#         colored_pixmap_6 = colorize_pixmap(original_pixmap_6, "#3d3d3d")
#         self.label_6.setPixmap(colored_pixmap_6)

#         self.verticalLayout_12.addWidget(self.label_6)
#         self.verticalLayout_11.addWidget(self.widget_8)
#         self.widget_9 = QtWidgets.QWidget(self.toWidget_textToaudio)
#         self.widget_9.setMaximumSize(QtCore.QSize(16777215, 88))
#         self.widget_9.setStyleSheet("QWidget {\n"
#         "    border: none;\n"
#         "}\n"
#         "\n"
#         "QLabel {\n"
#         "    border: none;\n"
#         "}")
#         self.widget_9.setObjectName("widget_9")
#         self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.widget_9)
#         self.verticalLayout_13.setContentsMargins(55, 0, -1, -1)
#         self.verticalLayout_13.setObjectName("verticalLayout_13")
#         self.toBrowseButton_audio = QtWidgets.QPushButton(self.widget_9)
#         self.toBrowseButton_audio.setMinimumSize(QtCore.QSize(100, 35))
#         self.toBrowseButton_audio.setMaximumSize(QtCore.QSize(100, 35))
#         font = QtGui.QFont()
#         font.setFamily("Segoe UI")
#         self.toBrowseButton_audio.setFont(font)

#         self.toBrowseButton_audio.clicked.connect(self.browseToAudioFile)


#         self.toBrowseButton_audio.setStyleSheet("""
#         QPushButton {
#         background-color: #3a3a3a;
#         color: #f0f0f0;
#         border: 1px solid #555555;
#         border-radius: 6px;
#         padding: 8px 16px;
#         font-weight: bold;
#         }

#         QPushButton:hover {
#         background-color: #4a4a4a;
#         border: 1px solid #666666;
#         }

#         QPushButton:pressed {
#         background-color: #2a2a2a;
#         border: 1px solid #888888;
#         }
#         """)

#         self.toBrowseButton_audio.setObjectName("toBrowseButton_audio")
#         self.verticalLayout_13.addWidget(self.toBrowseButton_audio)
#         self.verticalLayout_11.addWidget(self.widget_9)
#         self.toStackedWidget.addWidget(self.toAudioWidget)
#         self.horizontalLayout_4.addWidget(self.toStackedWidget)
#         self.filePathWidget = QtWidgets.QWidget(self.centralwidget)
#         self.filePathWidget.setGeometry(QtCore.QRect(40, 465, 831, 47))
#         self.filePathWidget.setMinimumSize(QtCore.QSize(831, 47))
#         self.filePathWidget.setMaximumSize(QtCore.QSize(831, 47))
#         self.filePathWidget.setStyleSheet("QWidget {\n"
#         "    color: #f0f0f0;\n"
#         "\n"
#         "}")
#         self.filePathWidget.setObjectName("filePathWidget")
#         self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.filePathWidget)
#         self.horizontalLayout_6.setContentsMargins(10, 0, 0, 0)
#         self.horizontalLayout_6.setObjectName("horizontalLayout_6")
#         self.yourFileLabel = QtWidgets.QLabel(self.filePathWidget)
#         self.yourFileLabel.setMinimumSize(QtCore.QSize(90, 25))
#         self.yourFileLabel.setMaximumSize(QtCore.QSize(90, 25))
#         font = QtGui.QFont()
#         font.setFamily("Segoe UI")
#         font.setPointSize(9)
#         self.yourFileLabel.setFont(font)
#         self.yourFileLabel.setStyleSheet("QLabel {\n"
#         "    color: #f0f0f0;\n"
#         "}")
#         self.yourFileLabel.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
#         self.yourFileLabel.setObjectName("yourFileLabel")
#         self.horizontalLayout_6.addWidget(self.yourFileLabel)
#         self.pathLabel = QtWidgets.QLabel(self.filePathWidget)
#         self.pathLabel.setMinimumSize(QtCore.QSize(0, 25))
#         self.pathLabel.setMaximumSize(QtCore.QSize(16777215, 25))
#         font = QtGui.QFont()
#         font.setFamily("Segoe UI")
#         font.setPointSize(9)
#         font.setBold(True)
#         font.setWeight(75)
#         self.pathLabel.setFont(font)
#         self.pathLabel.setStyleSheet("QLabel {\n"
#         "    color: #f0f0f0;\n"
#         "}")
#         self.pathLabel.setObjectName("pathLabel")
#         self.horizontalLayout_6.addWidget(self.pathLabel)
#         self.pushButton = QtWidgets.QPushButton(self.centralwidget)
#         self.pushButton.setGeometry(QtCore.QRect(50, 412, 115, 40))
#         font = QtGui.QFont()
#         font.setFamily("Segoe UI")
#         self.pushButton.setFont(font)
#         self.pushButton.setStyleSheet("""
#                 QPushButton {
#                 background-color: #3a3a3a;
#                 color: #f0f0f0;
#                 border: 1px solid #555555;
#                 border-radius: 6px;
#                 padding: 8px 16px;
#                 font-weight: bold;
#                 }

#                 QPushButton:hover {
#                 background-color: #4a4a4a;
#                 border: 1px solid #666666;
#                 }

#                 QPushButton:pressed {
#                 background-color: #2a2a2a;
#                 border: 1px solid #888888;
#                 }
#                 """)

#         self.pushButton.setObjectName("pushButton")
#         self.saveButton = QtWidgets.QPushButton(self.centralwidget)
#         self.saveButton.setGeometry(QtCore.QRect(700, 590, 150, 55))
#         self.saveButton.setMinimumSize(QtCore.QSize(0, 55))
#         self.saveButton.setMaximumSize(QtCore.QSize(150, 16777215))
#         font = QtGui.QFont()
#         font.setFamily("Segoe UI")
#         font.setPointSize(12)
#         font.setBold(True)
#         font.setWeight(75)
#         self.saveButton.setFont(font)
#         self.saveButton.setLayoutDirection(QtCore.Qt.LeftToRight)
#         self.saveButton.setStyleSheet("""
#                 QPushButton {
#                         background: qlineargradient(
#                         x1:0, y1:0, x2:1, y2:0, 
#                         stop:0 #6a11cb, 
#                         stop:1 #2575fc
#                         );
#                         color: white;
#                         border: none;
#                         border-radius: 8px;
#                         padding: 12px 24px;
#                         font-size: 16px;
#                         font-weight: 600;
#                 }
#                 QPushButton:hover {
#                         background: qlineargradient(
#                         x1:0, y1:0, x2:1, y2:0,
#                         stop:0 #7b33d9,
#                         stop:1 #2d85ff
#                         );
#                 }
#                 QPushButton:pressed {
#                         background: qlineargradient(
#                         x1:0, y1:0, x2:1, y2:0,
#                         stop:0 #4a0e9a,
#                         stop:1 #1b4ecc
#                         );
#                 }
#         """)
#         self.saveButton.setObjectName("saveButton")
#         MainWindow.setCentralWidget(self.centralwidget)
#         self.menubar = QtWidgets.QMenuBar(MainWindow)
#         self.menubar.setGeometry(QtCore.QRect(0, 0, 900, 26))
#         self.menubar.setObjectName("menubar")
#         MainWindow.setMenuBar(self.menubar)
#         self.statusbar = QtWidgets.QStatusBar(MainWindow)
#         self.statusbar.setObjectName("statusbar")
#         MainWindow.setStatusBar(self.statusbar)

#         self.retranslateUi(MainWindow)
#         self.fromStackedWidget.setCurrentIndex(1)
#         self.toStackedWidget.setCurrentIndex(1)
#         QtCore.QMetaObject.connectSlotsByName(MainWindow)


#         self.fromComboBox.addItems(["Text", "Image", "Audio"])


#         self.toComboBox.addItem("Text")
#         self.toComboBox.addItem("Image")
#         self.toComboBox.addItem("Audio")

        


#         # Connect signal and update toComboBox after adding initial items
#         self.fromComboBox.currentTextChanged.connect(self.updateToComboBox)
#         self.updateToComboBox(self.fromComboBox.currentText())
#         self.toComboBox.currentTextChanged.connect(self.updateToStackedWidget)


#         # Store paths
#         self.selected_from_image_path = None
#         self.selected_to_image_path = None

#         # Connect buttons (update these with your actual object names if different)
#         self.fromBrowseButton_img.clicked.connect(self.browseFromImageFile)
#         self.toBrowseButton_img.clicked.connect(self.browseToImageFile)
#         self.pushButton.clicked.connect(self.handleDecoding)

       
        

#     def handleDecoding(self):
#         from_format = self.fromComboBox.currentText()
#         to_format = self.toComboBox.currentText()

#         if from_format == "Image" and to_format in ["Image", "Text"]:
#                 self.decodeFromImage()
#         elif from_format == "Audio" and to_format == "Text":
#                 self.decodeFromAudio()
#         else:
#                 QtWidgets.QMessageBox.warning(None, "Unsupported", "Unsupported conversion selected.")



#     def decodeFromImage(self):
#         file_path, _ = QtWidgets.QFileDialog.getOpenFileName(None, "Select Image", "", "PNG Files (*.png);;All Files (*)")
#         if not file_path:
#                 return

#         try:
#                 result = self.image_steganography.decode_info(file_path)
#                 self.toPlainTextEdit.setPlainText(result)
#         except Exception as e:
#                 QtWidgets.QMessageBox.critical(None, "Error", f"Decoding failed: {str(e)}")





#     def decodeFromAudio(self):
#         file_path, _ = QtWidgets.QFileDialog.getOpenFileName(None, "Select Audio", "", "MP3 Files (*.mp3 *.wav);;All Files (*)")
#         if not file_path:
#                 return

#         try:
#                 result = self.audio_steganography.decode_info(file_path)
#                 self.toPlainTextEdit.setPlainText(result)
#         except Exception as e:
#                 QtWidgets.QMessageBox.critical(None, "Error", f"Decoding failed: {str(e)}")



#     def browseFromImageFile(self):
#         file_path, _ = QtWidgets.QFileDialog.getOpenFileName(None, "Select Secret Image", "", "Image Files (*.png);;All Files (*)")
#         if file_path:
#                 self.selected_from_image_path = file_path
#                 print("Selected secret image:", file_path)

#     def browseToImageFile(self):
#         print(type(self))
#         file_path, _ = QtWidgets.QFileDialog.getOpenFileName(self.MainWindow, "Select Host Image", "", "Image Files (*.png);;All Files (*)")
#         if file_path:
#                 self.selected_to_image_path = file_path
#                 print("Selected host image:", file_path)
                

#     def encodeImage(self):
#         if not self.selected_from_image_path or not self.selected_to_image_path:
#                 QtWidgets.QMessageBox.warning(None, "Missing Images", "Please select both images before encoding.")
#                 return

#         output_path, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save Output Image", "", "PNG Files (*.png);;All Files (*)")
#         if not output_path:
#                 return

#         steg = ImageSteganography()
#         steg.encode_info(
#                 host_path=self.selected_to_image_path,
#                 secret_path=self.selected_from_image_path,
#                 output_path=output_path
#         )

#         self.pathLabel.setText(f"Saved: {output_path}")
#         print("Output saved to:", output_path)



#     # to audio browse variable
#     def browseToAudioFile(self):
#         file_path, _ = QtWidgets.QFileDialog.getOpenFileName(
#                 self.MainWindow,  # or whatever your main window widget reference is
#                 "Select Audio File",
#                 "",
#                 "Audio Files (*.mp3 *.wav *.ogg *.flac);;All Files (*)"
#         )
#         if file_path:
#                 self.selected_to_audio_path = file_path
#                 print("Selected TO audio file:", file_path)


    

#     def updateToStackedWidget(self, to_format):
#         if to_format == "Text":
#             self.toStackedWidget.setCurrentWidget(self.toTextWidget)
#         elif to_format == "Image":
#             self.toStackedWidget.setCurrentWidget(self.toImgWidget)
#         elif to_format == "Audio":
#             self.toStackedWidget.setCurrentWidget(self.toAudioWidget)


#     def updateToComboBox(self, selected_text):
#         self.toComboBox.clear()

#         if selected_text == "Text":
#             self.toComboBox.addItem("Text")
#             self.fromStackedWidget.setCurrentWidget(self.fromTextWidget)

#         elif selected_text == "Image":
#             self.toComboBox.addItems(["Text", "Image"])
#             self.fromStackedWidget.setCurrentWidget(self.fromImgWidget)

#         elif selected_text == "Audio":
#             self.toComboBox.addItem("Text")

#             # Make sure this widget exists in your .ui and is named exactly like this
#             try:
#                 self.fromStackedWidget.setCurrentWidget(self.fromAudioWidget)
#             except AttributeError:
#                 print("WARNING: fromAudioWidget not found. Please add it in Qt Designer or comment out this line.")


#     def handleFromComboBoxChange(self, selected_text):

#         # Update toComboBox items
#         self.toComboBox.clear()
#         if selected_text == "Text":
#                 self.toComboBox.addItems(["Text", "Image", "Audio"])
#                 self.fromStackedWidget.setCurrentWidget(self.fromTextWidget)
#         elif selected_text == "Image":
#                 self.toComboBox.addItem("Image")
#                 self.fromStackedWidget.setCurrentWidget(self.fromImgWidget)

     



#     def retranslateUi(self, MainWindow):
#         _translate = QtCore.QCoreApplication.translate
#         MainWindow.setWindowTitle(_translate("MainWindow", "Whisper"))
#         self.passwordLabel.setText(_translate("MainWindow", "Password (optional):"))
#         self.passwordPlainTextEdit.setPlaceholderText(_translate("MainWindow", "password..."))
#         self.passwordGenerateButton.setText(_translate("MainWindow", "Suggested..."))
#         self.fromPlainTextEdit.setPlaceholderText(_translate("MainWindow", "Enter your text..."))
#         self.fromBrowseButton_img.setText(_translate("MainWindow", "Browse"))
#         self.toPlainTextEdit.setPlaceholderText(_translate("MainWindow", ". . ."))
#         self.toBrowseButton_img.setText(_translate("MainWindow", "Browse"))
#         self.toBrowseButton_audio.setText(_translate("MainWindow", "Browse"))
#         self.yourFileLabel.setText(_translate("MainWindow", "Your file: "))
#         self.pathLabel.setText(_translate("MainWindow", "Path///"))
#         self.pushButton.setText(_translate("MainWindow", "Reveal"))
#         self.saveButton.setText(_translate("MainWindow", "Save"))


# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     MainWindow = QtWidgets.QMainWindow()
#     ui = Ui_MainWindow()
#     ui.setupUi(MainWindow)
#     MainWindow.show()
#     sys.exit(app.exec_())



# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hide.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again. Do not edit this file unless you know what you are doing.

# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hide.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again. Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QPixmap, QPainter, QColor
from PyQt5 import QtCore
import os
import sys

# Add the parent directory to the system path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', 'Whisper')))
from Whisper.ImageSteganography import ImageSteganography
from Whisper.steganography import TextSteganography
from Whisper.AudioTextSteganography import AudioTextSteganography
# from Whisper.steganography import TextSteganography # This import seems duplicated, can be removed.




def colorize_pixmap(pixmap, color_str):
    tinted = QPixmap(pixmap.size())
    tinted.fill(QtCore.Qt.transparent)

    painter = QPainter(tinted)
    painter.setCompositionMode(QPainter.CompositionMode_Source)
    painter.drawPixmap(0, 0, pixmap)
    painter.setCompositionMode(QPainter.CompositionMode_SourceIn)
    painter.fillRect(tinted.rect(), QColor(color_str))
    painter.end()

    return tinted



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(900, 700)
        script_dir = os.path.dirname(os.path.abspath(__file__))
        
        # Corrected path for the main logo
        logo_path = os.path.join(script_dir, "..", "StartWindow", "imgs", "smallW (2).png") # Assuming smallW (2).png is in StartWindow/imgs
        if not os.path.exists(logo_path):
            # Fallback or error handling if path is incorrect. For now, let's assume it should be in HideMessage's imgs
            logo_path = os.path.join(script_dir, "..", "HideMessage", "imgs", "WhisperLogo.png") # Changed from smallW (2).png to WhisperLogo.png as used later
            
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(logo_path), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.MainWindow = MainWindow

        MainWindow.setStyleSheet("QMainWindow {\n"
        "    background-color: #2c2c2c; \n"
        "}\n"
        "\n"
        "QComboBox {\n"
        "    background-color: #3a3a3a;\n"
        "    color: #f0f0f0;\n"
        "    border: 1px solid #444444;\n"
        "    border-radius: 4px;\n"
        "    min-height: 40px; \n"
        "    padding-left: 10px;\n"
        "}\n"
        "\n"
        "QComboBox:hover {\n"
        "    background-color: #444444;\n"
        "}\n"
        "\n"
        "QComboBox::drop-down {\n"
        "    background-color: #3a3a3a;\n"
        "    border-left: 1px solid #444444;\n"
        "    width: 24px;\n"
        "}\n"
        "\n"
        "QComboBox::down-arrow {\n"
        "    image: url(gui/HideMessage/icons/down-arrow-5-svgrepo-com.svg);  /* make sure the image exists in resources */\n" # This path is problematic, should be absolute
        "    width: 12px;\n"
        "    height: 12px;\n"
        "}\n"

        "QComboBox QAbstractItemView {\n"
        "    background-color: #3a3a3a;\n"
        "    color: #f0f0f0;\n"
        "    selection-background-color: #2c2c2c;\n"
        "    selection-color: #ffffff;\n"
        "    border: 1px solid #444444;\n"
        "    outline: 0;\n"
        "    min-height: 100px;\n"
        "}\n"
        "QComboBox QAbstractItemView::item {\n"
        "     max-height: 60px;\n"
        "     padding: 10px 10px 10px 10px;\n"
        "     margin: 5px;\n"
        "}\n"
        "QComboBox QAbstractItemView::item:hover {\n"
        "     background-color: #505050;\n"
        "     color: white;\n"
        "}\n"

        "")

        
        self.text_steganography = TextSteganography()
        self.image_steganography = ImageSteganography() # Initialize ImageSteganography
        self.audio_steganography = AudioTextSteganography() 


        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.logoBigFrame = QtWidgets.QFrame(self.centralwidget)
        self.logoBigFrame.setGeometry(QtCore.QRect(0, 10, 900, 71))
        self.logoBigFrame.setStyleSheet("#logoBigFrame {\n"
        "    border: none;\n"
        "    border-bottom: 1px solid #1a1a1a; /* Change color & thickness as needed */\n"
        "}\n"
        "")
        self.logoBigFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.logoBigFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.logoBigFrame.setObjectName("logoBigFrame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.logoBigFrame)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.logoSmallFrame = QtWidgets.QFrame(self.logoBigFrame)
        self.logoSmallFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.logoSmallFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.logoSmallFrame.setObjectName("logoSmallFrame")
        self.whisperLogo = QtWidgets.QLabel(self.logoSmallFrame)
        self.whisperLogo.setGeometry(QtCore.QRect(30, 10, 130, 41))
        self.whisperLogo.setText("")
        
        # Corrected path for WhisperLogo
        whisper_logo_path = os.path.join(script_dir, "..", "HideMessage", "imgs", "WhisperLogo.png")
        self.whisperLogo.setPixmap(QtGui.QPixmap(whisper_logo_path))
        
        self.whisperLogo.setScaledContents(True)
        self.whisperLogo.setAlignment(QtCore.Qt.AlignCenter)
        self.whisperLogo.setWordWrap(False)
        self.whisperLogo.setObjectName("whisperLogo")
        self.horizontalLayout.addWidget(self.logoSmallFrame)
        self.passwordWidget = QtWidgets.QWidget(self.centralwidget)
        self.passwordWidget.setGeometry(QtCore.QRect(40, 515, 500, 153))
        self.passwordWidget.setMinimumSize(QtCore.QSize(500, 0))
        self.passwordWidget.setMaximumSize(QtCore.QSize(500, 16777215))
        self.passwordWidget.setObjectName("passwordWidget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.passwordWidget)
        self.verticalLayout_3.setContentsMargins(11, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.passwordLabel = QtWidgets.QLabel(self.passwordWidget)
        self.passwordLabel.setMinimumSize(QtCore.QSize(59, 30))
        self.passwordLabel.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.passwordLabel.setFont(font)
        self.passwordLabel.setStyleSheet("#passwordLabel {\n"
        "    color: #f0f0f0;  \n"
        "}")
        self.passwordLabel.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.passwordLabel.setObjectName("passwordLabel")
        self.verticalLayout_3.addWidget(self.passwordLabel)
        self.passwordAndButtonsWidget = QtWidgets.QWidget(self.passwordWidget)
        self.passwordAndButtonsWidget.setMaximumSize(QtCore.QSize(805, 16777215))
        self.passwordAndButtonsWidget.setObjectName("passwordAndButtonsWidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.passwordAndButtonsWidget)
        self.horizontalLayout_3.setContentsMargins(0, -1, 0, -1)
        self.horizontalLayout_3.setSpacing(128)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.suggestedWidget = QtWidgets.QWidget(self.passwordAndButtonsWidget)
        self.suggestedWidget.setMaximumSize(QtCore.QSize(512, 16777215))
        self.suggestedWidget.setObjectName("suggestedWidget")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.suggestedWidget)
        self.horizontalLayout_7.setContentsMargins(0, 0, -1, -1)
        self.horizontalLayout_7.setSpacing(45)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.passwordInputWidget = QtWidgets.QWidget(self.suggestedWidget)
        self.passwordInputWidget.setMinimumSize(QtCore.QSize(300, 50))
        self.passwordInputWidget.setMaximumSize(QtCore.QSize(300, 50))
        self.passwordInputWidget.setStyleSheet("#passwordInputWidget {\n"
        "    border: 1px solid #cecece;\n"
        "    border-radius: 10px;\n"
        "}")
        self.passwordInputWidget.setObjectName("passwordInputWidget")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.passwordInputWidget)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.passwordPlainTextEdit = QtWidgets.QPlainTextEdit(self.passwordInputWidget)
        self.passwordPlainTextEdit.setMinimumSize(QtCore.QSize(280, 0))
        self.passwordPlainTextEdit.setMaximumSize(QtCore.QSize(280, 16777215))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.passwordPlainTextEdit.setFont(font)
        self.passwordPlainTextEdit.setStyleSheet("#passwordPlainTextEdit {\n"
        "    background-color: #2c2c2c;\n"
        "    color: #f0f0f0;\n"
        "    border: none;\n"
        "}")
        self.passwordPlainTextEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.passwordPlainTextEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.passwordPlainTextEdit.setObjectName("passwordPlainTextEdit")
        self.horizontalLayout_5.addWidget(self.passwordPlainTextEdit)
        self.horizontalLayout_7.addWidget(self.passwordInputWidget)
        self.passwordGenerateButton = QtWidgets.QPushButton(self.suggestedWidget)
        self.passwordGenerateButton.setMinimumSize(QtCore.QSize(0, 50))
        self.passwordGenerateButton.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.passwordGenerateButton.setFont(font)
        self.passwordGenerateButton.setStyleSheet("QPushButton {\n"
        "    background-color: #1a1a1a; \n"
        "    color: #f0f0f0;\n"
        "    border-radius: 8px; \n"
        "    padding: 10px 15px;\n"
        "}\n"
        "QPushButton:hover {\n"
        "    background-color: #333333;\n"
        "}\n"
        "QPushButton:pressed {\n"
        "    background-color: #000000;\n"
        "}")
        self.passwordGenerateButton.setObjectName("passwordGenerateButton")
        self.horizontalLayout_7.addWidget(self.passwordGenerateButton)
        self.horizontalLayout_3.addWidget(self.suggestedWidget)
        self.mainContentWidget = QtWidgets.QWidget(self.centralwidget)
        self.mainContentWidget.setGeometry(QtCore.QRect(0, 80, 901, 441))
        self.mainContentWidget.setObjectName("mainContentWidget")
        self.fromToWidget = QtWidgets.QWidget(self.mainContentWidget)
        self.fromToWidget.setGeometry(QtCore.QRect(40, 10, 821, 61))
        self.fromToWidget.setObjectName("fromToWidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.fromToWidget)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setSpacing(20)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.fromComboBox = QtWidgets.QComboBox(self.fromToWidget)
        self.fromComboBox.setMinimumSize(QtCore.QSize(0, 40))
        self.fromComboBox.setObjectName("fromComboBox")
        self.fromComboBox.addItem("") # Text
        self.fromComboBox.addItem("") # Image
        self.fromComboBox.addItem("") # Audio
        self.horizontalLayout_2.addWidget(self.fromComboBox)
        self.toComboBox = QtWidgets.QComboBox(self.fromToWidget)
        self.toComboBox.setMinimumSize(QtCore.QSize(0, 40))
        self.toComboBox.setObjectName("toComboBox")
        self.horizontalLayout_2.addWidget(self.toComboBox)
        self.fromStackedWidget = QtWidgets.QStackedWidget(self.mainContentWidget)
        self.fromStackedWidget.setGeometry(QtCore.QRect(40, 80, 400, 321))
        self.fromStackedWidget.setObjectName("fromStackedWidget")
        self.fromTextWidget = QtWidgets.QWidget(self.fromStackedWidget)
        self.fromTextWidget.setObjectName("fromTextWidget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.fromTextWidget)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.fromPlainTextEdit = QtWidgets.QPlainTextEdit(self.fromTextWidget)
        self.fromPlainTextEdit.setStyleSheet("QPlainTextEdit {\n"
        "    background-color: #3a3a3a;\n"
        "    color: #f0f0f0;\n"
        "    border: 1px solid #444444;\n"
        "    border-radius: 8px;\n"
        "    padding: 10px;\n"
        "}")
        self.fromPlainTextEdit.setObjectName("fromPlainTextEdit")
        self.verticalLayout_4.addWidget(self.fromPlainTextEdit)
        self.fromStackedWidget.addWidget(self.fromTextWidget)
        self.fromImgWidget = QtWidgets.QWidget(self.fromStackedWidget)
        self.fromImgWidget.setObjectName("fromImgWidget")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.fromImgWidget)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.fromImgFrame = QtWidgets.QFrame(self.fromImgWidget)
        self.fromImgFrame.setStyleSheet("#fromImgFrame {\n"
        "    border: 1px solid #444444;\n"
        "    border-radius: 8px;\n"
        "}")
        self.fromImgFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.fromImgFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.fromImgFrame.setObjectName("fromImgFrame")
        self.fromImgVerticalLayout = QtWidgets.QVBoxLayout(self.fromImgFrame)
        self.fromImgVerticalLayout.setObjectName("fromImgVerticalLayout")
        self.fromImgIcon = QtWidgets.QLabel(self.fromImgFrame)
        self.fromImgIcon.setMinimumSize(QtCore.QSize(100, 100))
        self.fromImgIcon.setMaximumSize(QtCore.QSize(100, 100))
        self.fromImgIcon.setText("")
        
        # Corrected path for image.svg
        image_icon_path = os.path.join(script_dir, "..", "HideMessage", "icons", "image.svg")
        self.fromImgIcon.setPixmap(QtGui.QPixmap(image_icon_path))
        
        self.fromImgIcon.setScaledContents(True)
        self.fromImgIcon.setAlignment(QtCore.Qt.AlignCenter)
        self.fromImgIcon.setObjectName("fromImgIcon")
        self.fromImgVerticalLayout.addWidget(self.fromImgIcon, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.fromBrowseButton_img = QtWidgets.QPushButton(self.fromImgFrame)
        self.fromBrowseButton_img.setMinimumSize(QtCore.QSize(100, 40))
        self.fromBrowseButton_img.setMaximumSize(QtCore.QSize(100, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.fromBrowseButton_img.setFont(font)
        self.fromBrowseButton_img.setStyleSheet("QPushButton {\n"
        "    background-color: #1a1a1a; \n"
        "    color: #f0f0f0;\n"
        "    border-radius: 8px; \n"
        "    padding: 10px 15px;\n"
        "}\n"
        "QPushButton:hover {\n"
        "    background-color: #333333;\n"
        "}\n"
        "QPushButton:pressed {\n"
        "    background-color: #000000;\n"
        "}")
        self.fromBrowseButton_img.setObjectName("fromBrowseButton_img")
        self.fromImgVerticalLayout.addWidget(self.fromBrowseButton_img, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_5.addWidget(self.fromImgFrame)
        self.fromStackedWidget.addWidget(self.fromImgWidget)

        # Add fromAudioWidget (copied and adapted from hideMess.py's toAudioWidget)
        self.fromAudioWidget = QtWidgets.QWidget(self.fromStackedWidget)
        self.fromAudioWidget.setObjectName("fromAudioWidget")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.fromAudioWidget)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.fromAudioFrame = QtWidgets.QFrame(self.fromAudioWidget)
        self.fromAudioFrame.setStyleSheet("#fromAudioFrame {\n"
        "    border: 1px solid #444444;\n"
        "    border-radius: 8px;\n"
        "}")
        self.fromAudioFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.fromAudioFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.fromAudioFrame.setObjectName("fromAudioFrame")
        self.fromAudioVerticalLayout = QtWidgets.QVBoxLayout(self.fromAudioFrame)
        self.fromAudioVerticalLayout.setObjectName("fromAudioVerticalLayout")
        self.fromAudioIcon = QtWidgets.QLabel(self.fromAudioFrame)
        self.fromAudioIcon.setMinimumSize(QtCore.QSize(100, 100))
        self.fromAudioIcon.setMaximumSize(QtCore.QSize(100, 100))
        self.fromAudioIcon.setText("")
        
        # Corrected path for audio.svg
        audio_icon_path = os.path.join(script_dir, "..", "HideMessage", "icons", "audio.svg")
        self.fromAudioIcon.setPixmap(QtGui.QPixmap(audio_icon_path)) # Assuming an audio icon exists
        
        self.fromAudioIcon.setScaledContents(True)
        self.fromAudioIcon.setAlignment(QtCore.Qt.AlignCenter)
        self.fromAudioIcon.setObjectName("fromAudioIcon")
        self.fromAudioVerticalLayout.addWidget(self.fromAudioIcon, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.fromBrowseButton_audio = QtWidgets.QPushButton(self.fromAudioFrame)
        self.fromBrowseButton_audio.setMinimumSize(QtCore.QSize(100, 40))
        self.fromBrowseButton_audio.setMaximumSize(QtCore.QSize(100, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.fromBrowseButton_audio.setFont(font)
        self.fromBrowseButton_audio.setStyleSheet("QPushButton {\n"
        "    background-color: #1a1a1a; \n"
        "    color: #f0f0f0;\n"
        "    border-radius: 8px; \n"
        "    padding: 10px 15px;\n"
        "}\n"
        "QPushButton:hover {\n"
        "    background-color: #333333;\n"
        "}\n"
        "QPushButton:pressed {\n"
        "    background-color: #000000;\n"
        "}")
        self.fromBrowseButton_audio.setObjectName("fromBrowseButton_audio")
        self.fromAudioVerticalLayout.addWidget(self.fromBrowseButton_audio, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_6.addWidget(self.fromAudioFrame)
        self.fromStackedWidget.addWidget(self.fromAudioWidget)

        self.toStackedWidget = QtWidgets.QStackedWidget(self.mainContentWidget)
        self.toStackedWidget.setGeometry(QtCore.QRect(450, 80, 400, 321))
        self.toStackedWidget.setObjectName("toStackedWidget")
        self.toTextWidget = QtWidgets.QWidget(self.toStackedWidget)
        self.toTextWidget.setObjectName("toTextWidget")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.toTextWidget)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setSpacing(0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.toPlainTextEdit = QtWidgets.QPlainTextEdit(self.toTextWidget)
        self.toPlainTextEdit.setStyleSheet("QPlainTextEdit {\n"
        "    background-color: #3a3a3a;\n"
        "    color: #f0f0f0;\n"
        "    border: 1px solid #444444;\n"
        "    border-radius: 8px;\n"
        "    padding: 10px;\n"
        "}")
        self.toPlainTextEdit.setObjectName("toPlainTextEdit")
        self.verticalLayout_7.addWidget(self.toPlainTextEdit)
        self.toStackedWidget.addWidget(self.toTextWidget)
        self.toImgWidget = QtWidgets.QWidget(self.toStackedWidget)
        self.toImgWidget.setObjectName("toImgWidget")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.toImgWidget)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setSpacing(0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.toImgFrame = QtWidgets.QFrame(self.toImgWidget)
        self.toImgFrame.setStyleSheet("#toImgFrame {\n"
        "    border: 1px solid #444444;\n"
        "    border-radius: 8px;\n"
        "}")
        self.toImgFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.toImgFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.toImgFrame.setObjectName("toImgFrame")
        self.toImgVerticalLayout = QtWidgets.QVBoxLayout(self.toImgFrame)
        self.toImgVerticalLayout.setObjectName("toImgVerticalLayout")
        self.toImgIcon = QtWidgets.QLabel(self.toImgFrame)
        self.toImgIcon.setMinimumSize(QtCore.QSize(100, 100))
        self.toImgIcon.setMaximumSize(QtCore.QSize(100, 100))
        self.toImgIcon.setText("")
        
        # Corrected path for image.svg in toImgWidget
        self.toImgIcon.setPixmap(QtGui.QPixmap(image_icon_path))
        
        self.toImgIcon.setScaledContents(True)
        self.toImgIcon.setAlignment(QtCore.Qt.AlignCenter)
        self.toImgIcon.setObjectName("toImgIcon")
        self.toImgVerticalLayout.addWidget(self.toImgIcon, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.toBrowseButton_img = QtWidgets.QPushButton(self.toImgFrame)
        self.toBrowseButton_img.setMinimumSize(QtCore.QSize(100, 40))
        self.toBrowseButton_img.setMaximumSize(QtCore.QSize(100, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.toBrowseButton_img.setFont(font)
        self.toBrowseButton_img.setStyleSheet("QPushButton {\n"
        "    background-color: #1a1a1a; \n"
        "    color: #f0f0f0;\n"
        "    border-radius: 8px; \n"
        "    padding: 10px 15px;\n"
        "}\n"
        "QPushButton:hover {\n"
        "    background-color: #333333;\n"
        "}\n"
        "QPushButton:pressed {\n"
        "    background-color: #000000;\n"
        "}")
        self.toBrowseButton_img.setObjectName("toBrowseButton_img")
        self.toImgVerticalLayout.addWidget(self.toBrowseButton_img, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_8.addWidget(self.toImgFrame)
        self.toStackedWidget.addWidget(self.toImgWidget)

        # Connect signals and slots
        self.fromComboBox.currentIndexChanged.connect(self.updateToComboBox)
        self.fromBrowseButton_img.clicked.connect(self.browseImageFile)
        self.fromBrowseButton_audio.clicked.connect(self.browseAudioFile)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(660, 560, 141, 51))
        self.pushButton.setMinimumSize(QtCore.QSize(141, 51))
        self.pushButton.setMaximumSize(QtCore.QSize(141, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("QPushButton {\n"
        "    background-color: #1a1a1a; /* Darker background */\n"
        "    color: #f0f0f0; /* Light text */\n"
        "    border-radius: 8px; /* Rounded corners */\n"
        "    padding: 10px 15px;\n"
        "}\n"
        "QPushButton:hover {\n"
        "    background-color: #333333; /* Slightly lighter on hover */\n"
        "}\n"
        "QPushButton:pressed {\n"
        "    background-color: #000000; /* Even darker when pressed */\n"
        "}")
        self.pushButton.setObjectName("pushButton")
        
        # Connect the Decode button
        self.pushButton.clicked.connect(self.decodeContent)

        self.saveButton = QtWidgets.QPushButton(self.centralwidget)
        self.saveButton.setGeometry(QtCore.QRect(660, 620, 141, 51))
        self.saveButton.setMinimumSize(QtCore.QSize(141, 51))
        self.saveButton.setMaximumSize(QtCore.QSize(141, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.saveButton.setFont(font)
        self.saveButton.setStyleSheet("QPushButton {\n"
        "    background-color: #1a1a1a; /* Darker background */\n"
        "    color: #f0f0f0; /* Light text */\n"
        "    border-radius: 8px; /* Rounded corners */\n"
        "    padding: 10px 15px;\n"
        "}\n"
        "QPushButton:hover {\n"
        "    background-color: #333333; /* Slightly lighter on hover */\n"
        "}\n"
        "QPushButton:pressed {\n"
        "    background-color: #000000; /* Even darker when pressed */\n"
        "}")
        self.saveButton.setObjectName("saveButton")
        self.fileInfoWidget = QtWidgets.QWidget(self.centralwidget)
        self.fileInfoWidget.setGeometry(QtCore.QRect(40, 420, 801, 71))
        self.fileInfoWidget.setStyleSheet("")
        self.fileInfoWidget.setObjectName("fileInfoWidget")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.fileInfoWidget)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.yourFileLabel = QtWidgets.QLabel(self.fileInfoWidget)
        self.yourFileLabel.setMinimumSize(QtCore.QSize(0, 40))
        self.yourFileLabel.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.yourFileLabel.setFont(font)
        self.yourFileLabel.setStyleSheet("color: #f0f0f0;")
        self.yourFileLabel.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.yourFileLabel.setObjectName("yourFileLabel")
        self.horizontalLayout_4.addWidget(self.yourFileLabel)
        self.pathLabel = QtWidgets.QLabel(self.fileInfoWidget)
        self.pathLabel.setMinimumSize(QtCore.QSize(0, 40))
        self.pathLabel.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.pathLabel.setFont(font)
        self.pathLabel.setStyleSheet("color: #f0f0f0;")
        self.pathLabel.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.pathLabel.setObjectName("pathLabel")
        self.horizontalLayout_4.addWidget(self.pathLabel)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 900, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.fromStackedWidget.setCurrentIndex(0)
        self.toStackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        self.updateToComboBox(self.fromComboBox.currentIndex()) # Set initial state of toComboBox

    def updateToComboBox(self, index):
        self.toComboBox.clear()
        if index == 0:  # "Text" selected in fromComboBox
            self.fromStackedWidget.setCurrentWidget(self.fromTextWidget)
            self.toComboBox.addItem("Text")
        elif index == 1:  # "Image" selected in fromComboBox
            self.fromStackedWidget.setCurrentWidget(self.fromImgWidget)
            self.toComboBox.addItem("Text")
            self.toComboBox.addItem("Image")
        elif index == 2: # "Audio" selected in fromComboBox
            self.fromStackedWidget.setCurrentWidget(self.fromAudioWidget)
            self.toComboBox.addItem("Text")
        
    def browseImageFile(self):
        options = QtWidgets.QFileDialog.Options()
        file_path, _ = QtWidgets.QFileDialog.getOpenFileName(self.MainWindow, "Select Image File", "",
                                                          "Image Files (*.png *.jpg *.jpeg *.bmp);;All Files (*)", options=options)
        if file_path:
            self.pathLabel.setText(file_path)
            # You might want to display the image preview here or load it for decoding
            # For decoding, you'll pass this path to the decode_info method when "Convert" is clicked.

    def browseAudioFile(self):
        options = QtWidgets.QFileDialog.Options()
        file_path, _ = QtWidgets.QFileDialog.getOpenFileName(self.MainWindow, "Select Audio File", "",
                                                          "Audio Files (*.mp3 *.wav *.flac);;All Files (*)", options=options)
        if file_path:
            self.pathLabel.setText(file_path)
            # For decoding, you'll pass this path to the decode_info method when "Convert" is clicked.

    def decodeContent(self):
        # This function will be connected to the "Decode" button
        from_type = self.fromComboBox.currentText()
        file_path = self.pathLabel.text()
        
        if not file_path or file_path == "Path///":
            QtWidgets.QMessageBox.warning(self.MainWindow, "Input Error", "Please select a file to decode.")
            return

        decoded_message = None
        try:
            if from_type == "Image":
                decoded_message = self.image_steganography.decode_info(file_path)
            elif from_type == "Audio":
                decoded_message = self.audio_steganography.decode_info(file_path)
            elif from_type == "Text":
                # If "Text" is selected as the 'from' type, it implies the message itself is text,
                # but it must have been hidden *within* an image or audio.
                # The user needs to select the carrier file (Image or Audio) for decoding.
                QtWidgets.QMessageBox.information(self.MainWindow, "Decoding Info", "To decode hidden text, please select the original carrier type (Image or Audio) in the 'From' combo box and then select the carrier file.")
                return

            if decoded_message:
                self.toPlainTextEdit.setPlainText(decoded_message)
            else:
                self.toPlainTextEdit.setPlainText("No hidden message found or an error occurred during decoding.")
        except Exception as e:
            QtWidgets.QMessageBox.critical(self.MainWindow, "Decoding Error", f"An error occurred during decoding: {e}")
            self.toPlainTextEdit.setPlainText(f"Error: {e}")


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Whisper - Reveal Content")) # Changed window title
        self.passwordLabel.setText(_translate("MainWindow", "Password (optional):"))
        self.passwordPlainTextEdit.setPlaceholderText(_translate("MainWindow", "password..."))
        self.passwordGenerateButton.setText(_translate("MainWindow", "Suggested..."))
        self.fromPlainTextEdit.setPlaceholderText(_translate("MainWindow", "Enter your text..."))
        self.fromBrowseButton_img.setText(_translate("MainWindow", "Browse"))
        self.fromBrowseButton_audio.setText(_translate("MainWindow", "Browse")) # Added for audio
        self.toPlainTextEdit.setPlaceholderText(_translate("MainWindow", ". . ."))
        self.toBrowseButton_img.setText(_translate("MainWindow", "Browse")) # This might not be needed for reveal
        # self.toBrowseButton_audio.setText(_translate("MainWindow", "Browse")) # This might not be needed for reveal
        self.yourFileLabel.setText(_translate("MainWindow", "Your file: "))
        self.pathLabel.setText(_translate("MainWindow", "Path///"))
        self.pushButton.setText(_translate("MainWindow", "Decode")) # Changed from Convert to Decode
        self.saveButton.setText(_translate("MainWindow", "Save Decoded")) # Changed from Save

        # Set fromComboBox items
        self.fromComboBox.setItemText(0, _translate("MainWindow", "Text"))
        self.fromComboBox.setItemText(1, _translate("MainWindow", "Image"))
        self.fromComboBox.setItemText(2, _translate("MainWindow", "Audio")) # Added Audio

if __name__ == "__main__":
    import sys
    import traceback # Import traceback for detailed error info

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    try:
        ui.setupUi(MainWindow)
        MainWindow.show()
        sys.exit(app.exec_()) # Use sys.exit to ensure clean exit
    except Exception as e:
        print("An error occurred:")
        traceback.print_exc() # Print full traceback
        sys.exit(1) # Exit with an error code